{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\Company Secure and File duplicacy Management System\\\\client\\\\src\\\\context\\\\NotificationContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotification = () => {\n  _s();\n  return useContext(NotificationContext);\n};\n_s(useNotification, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const addNotification = useCallback(notification => {\n    const newNotification = {\n      ...notification,\n      id: Date.now(),\n      timestamp: notification.timestamp || new Date()\n    };\n    setNotifications(prev => [newNotification, ...prev]);\n\n    // Auto-remove notification after duration (if specified)\n    if (notification.duration) {\n      setTimeout(() => {\n        removeNotification(newNotification.id);\n      }, notification.duration);\n    }\n  }, []);\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n  const clearNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s2(NotificationProvider, \"R1oKNbVI4zbX8v3mrpTNC96/+l8=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","NotificationContext","useNotification","NotificationProvider","children","notifications","setNotifications","addNotification","notification","newNotification","id","Date","now","timestamp","prev","duration","setTimeout","removeNotification","filter","clearNotifications","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/Company Secure and File duplicacy Management System/client/src/context/NotificationContext.jsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useCallback } from \"react\"\n\nconst NotificationContext = createContext()\n\nexport const useNotification = () => {\n  return useContext(NotificationContext)\n}\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([])\n\n  const addNotification = useCallback((notification) => {\n    const newNotification = {\n      ...notification,\n      id: Date.now(),\n      timestamp: notification.timestamp || new Date(),\n    }\n\n    setNotifications((prev) => [newNotification, ...prev])\n\n    // Auto-remove notification after duration (if specified)\n    if (notification.duration) {\n      setTimeout(() => {\n        removeNotification(newNotification.id)\n      }, notification.duration)\n    }\n  }, [])\n\n  const removeNotification = useCallback((id) => {\n    setNotifications((prev) => prev.filter((notification) => notification.id !== id))\n  }, [])\n\n  const clearNotifications = useCallback(() => {\n    setNotifications([])\n  }, [])\n\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications,\n  }\n\n  return <NotificationContext.Provider value={value}>{children}</NotificationContext.Provider>\n}\n\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEZ,SAASE,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMO,eAAe,GAAGA,CAAA,KAAM;EAAAV,EAAA;EACnC,OAAOI,UAAU,CAACK,mBAAmB,CAAC;AACxC,CAAC;AAAAT,EAAA,CAFYU,eAAe;AAI5B,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAV,GAAA;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,eAAe,GAAGT,WAAW,CAAEU,YAAY,IAAK;IACpD,MAAMC,eAAe,GAAG;MACtB,GAAGD,YAAY;MACfE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,SAAS,EAAEL,YAAY,CAACK,SAAS,IAAI,IAAIF,IAAI,CAAC;IAChD,CAAC;IAEDL,gBAAgB,CAAEQ,IAAI,IAAK,CAACL,eAAe,EAAE,GAAGK,IAAI,CAAC,CAAC;;IAEtD;IACA,IAAIN,YAAY,CAACO,QAAQ,EAAE;MACzBC,UAAU,CAAC,MAAM;QACfC,kBAAkB,CAACR,eAAe,CAACC,EAAE,CAAC;MACxC,CAAC,EAAEF,YAAY,CAACO,QAAQ,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,kBAAkB,GAAGnB,WAAW,CAAEY,EAAE,IAAK;IAC7CJ,gBAAgB,CAAEQ,IAAI,IAAKA,IAAI,CAACI,MAAM,CAAEV,YAAY,IAAKA,YAAY,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;EACnF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,kBAAkB,GAAGrB,WAAW,CAAC,MAAM;IAC3CQ,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,KAAK,GAAG;IACZf,aAAa;IACbE,eAAe;IACfU,kBAAkB;IAClBE;EACF,CAAC;EAED,oBAAOnB,OAAA,CAACC,mBAAmB,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAA/B,YAAA;IAAAgC,UAAA;IAAAC,YAAA;EAAA,OAA+B,CAAC;AAC9F,CAAC;AAAA9B,GAAA,CApCYS,oBAAoB;AAAAsB,EAAA,GAApBtB,oBAAoB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}